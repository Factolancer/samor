import {Component, OnInit, style, state, animate, transition, trigger} from '@angular/core';
import {FormGroup, Validators, FormControl, FormBuilder, AbstractControl} from '@angular/forms';
import {Subscription} from "rxjs";

import {User} from "../../../models/user";
import {UserService} from '../../user.service';
import {Banks} from "../../../bank-list";
import {Bank} from "../../../models/bank";
import {BankSearchInput} from "./search-input";
import {BankSearchService} from "./search.service";

function accountNumberValidator(c: AbstractControl) {
    return c.get('confirm_account_number').value === c.get('account_number').value
        ? null : {'mismatch': true};
}

// function accountNumberValidator(): ValidatorFn{
//     return (g: FormGroup) => {
//         return g.get('confirm_account_number').value === g.get('account_number').value
//           ? null : {'mismatch': true};
//     }
// }

@Component({
    selector: 'bank-section',
    templateUrl: './bank-section.component.html',
    styleUrls: ['../../registration.component.css'],
    animations: [
        trigger('ShowHide', [
            state('show', style({opacity: '1', height: '*', visibility: 'visible'})),
            state('hide', style({opacity: '0', height: '0px', visibility: 'collapse'})),
            transition('show <=> hide', [
                animate('500ms ease-in-out')
            ])
        ])
    ]
})
export class BankSectionComponent implements OnInit {
    bankForm: FormGroup;
    account: FormGroup;
    acnumber: string;
    public banks = Banks;
    public bank: Bank;
    public bankList: Bank[];
    user: User

    state: string = 'hide';
    banksaved = false;
    bankcollapsed = true;
    showbanklist= false;

    usersubscription: Subscription;
    resultsubscription: Subscription
    searchInput: BankSearchInput = {
        bank_id: 0,
        bank_name: '',
        keyword: '',
        branch: '',
        city: '',
        IFSC: '',
        address: ''
    };

    constructor(private fb: FormBuilder, public userService: UserService, public  searchService: BankSearchService) {
        this.user = new User({pan: '', name: '', dob: '', gender: '', contact: {}},
            {job: '', income: '', father_spouse: '', address_proof: '', current_address: {}, permanent_address: {}},
            {
                holder_name: '', account_type: 'Savings Account', account_number: '',
                bank: {bank_name: '', ifsc: '', city: '', state: ''}
            },
            {
                investor_type: 'Resident Indian',
                birth_country: 'India',
                nationality: 'India',
                tax_country: 'India',
                politically_exposed: 'No',
                politically_related: 'No'
            });

        this.usersubscription = this.userService.currentUser.subscribe(
            result => {
                this.user = result
            }
        )

        this.resultsubscription = this.searchService.searchResults.subscribe(
            result => {
                this.bankList = result.banks;
            }
        );

        //this.acnumber = this.bankForm.controls['account'].get('account_number');
    }

    ngOnInit() {
        this.bankForm = this.fb.group({
            holder_name: ['', Validators.compose([Validators.required])],
            bank: this.fb.group({
                bank_name: [''],
                ifsc: ['', Validators.compose([Validators.required, Validators.pattern('[0-9a-zA-Z]{11}')])],
                city: [''],
                state: [''],
                branch: [''],
                district: [''],
                address: ['']
            }),
            account_type: ['', Validators.compose([Validators.required])],
            account: this.fb.group({
                account_number: ['', Validators.compose([Validators.required])],
                confirm_account_number: ['', Validators.compose([])]
            }, {validator: Validators.compose([accountNumberValidator])})  // {validator: accountNumberValidator}) // )
        });
    }

    searchForBranch(value: any) {
        if (value.length >= 3) {
            this.searchInput.keyword = value;
            this.showbanklist = true;
        } else {
            this.searchInput.keyword = "";
            this.showbanklist = false;
        }
        this.searchService.searchBranch(this.searchInput)
    }

    setBankName() {
        this.searchInput.bank_id = Number(this.bankForm.controls['bank'].get('bank_name').value);

    }

    showlist(){
        this.showbanklist = true;
    }
    select(item: Bank) {
        this.user.Bank.bank = item;
        this.showbanklist = false;
        // console.log(this.user.Bank.bank.city);
        //console.log(this.bank.IFSC);
        // this.bankForm.controls['bank'].get('city').setValue(item.city);
    }

    onBankSubmit() {
        this.banksaved = true;
        this.userService.updateBankData(this.bankForm.value);
        // this.user.Bank = this.bankForm.value;
        // console.log(this.user);
        this.toggleBank();
    }

    toggleBank() {
        if (this.bankcollapsed == true) this.bankcollapsed = false;
        else this.bankcollapsed = true;

        this.state = (this.state === 'hide' ? 'show' : 'hide')
    }
}
