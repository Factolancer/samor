import {Injectable} from "@angular/core";
import {Http, Response} from "@angular/http";
import {Observable} from "rxjs/Observable";


@Injectable()
export class HttpService {

    constructor(private http: Http) {
    }

    baseUrl: string = "http://localhost:9000";

    get(path: string): Observable<any> {
        return this.http.get(this.baseUrl + path)
            .map(this.extractData)
            .catch(this.handleError);
    }

    post(path: string, data: any): Observable<any> {
        return this.http.post(this.baseUrl + path, data)
            .map(this.extractData)
            .catch(this.handleError);
    }

    private extractData(res: Response) {
        let body = res.json();
        return body || {};
    }

    private handleError(error: any) {
        // In a real world app, we might use a remote logging infrastructure
        // We'd also dig deeper into the error to get a better message
        let errMsg = (error.message) ? error.message :
            error.status ? `${error.status} - ${error.statusText}` : 'Server error';
        console.error(errMsg); // log to console instead
        return Observable.throw(errMsg);
    }
}

