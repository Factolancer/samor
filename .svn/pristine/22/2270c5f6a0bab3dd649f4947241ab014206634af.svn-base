import {Component, OnInit, Input, OnDestroy} from "@angular/core";
import {Subject, Observable} from "rxjs";
import {Fund} from "../models/fund";
import {ExploreFundsService} from "./explore-funds.service";

@Component({
    selector: 'app-fund-search-bar',
    templateUrl: './fund-search-bar.component.html',
    styleUrls: ['./explore-funds.styles.scss']
})
export class FundSearchBarComponent implements OnInit, OnDestroy {


    searchSuggestions: Observable<Fund[]>;
    private searchTermStream = new Subject<string>();
    queryString: string = "";
    @Input() searchType: string;

    constructor(private exploreFundsService: ExploreFundsService) {
        this.subscribeToAutoComplete();
    }

    subscribeToAutoComplete() {
        this.searchSuggestions = this.searchTermStream
            .debounceTime(300)
            .distinctUntilChanged()
            .switchMap((term: string) => this.exploreFundsService.getFundAutoCompleteData(term));
    }

    searchBarInput(event: any) {

        console.log(this.queryString)
        console.log(/[^a-zA-Z0-9\s]/.test(this.queryString))

        if ((/[^a-zA-Z0-9\s]/.test(this.queryString))) {
            this.queryString = this.queryString.substring(0, this.queryString.length - 1);
            console.log(this.queryString);
        } else {
            if (event.keyCode == 13 || event.type == "click") {
                this.searchForKeyword(this.queryString);
            } else {
                this.searchTermStream.next(this.queryString);
            }
        }


    }


    searchForKeyword(query: string) {
        let defaultSearchInput = this.exploreFundsService.getDefaultFundSearchInput();
        let searchInput = this.exploreFundsService.getFundSearchInput();
        defaultSearchInput.keyword = query;
        defaultSearchInput.searchType = this.searchType;
        defaultSearchInput.rows = searchInput.rows;
        this.exploreFundsService.setFundSearchInput(defaultSearchInput);
    }

    ngOnInit() {
    }

    ngOnDestroy() {
        this.searchTermStream.unsubscribe();
    }

}
