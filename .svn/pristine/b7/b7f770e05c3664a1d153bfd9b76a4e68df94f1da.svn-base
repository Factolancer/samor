/**
 * Express configuration
 */

'use strict';
var express = require('express'),
    favicon = require('serve-favicon'),
    morgan = require('morgan'),
    compression = require('compression'),
    bodyParser = require('body-parser'),
    methodOverride = require('method-override'),
    cookieParser = require('cookie-parser'),
    path = require('path'),
    config = require('./environment'),
    passport = require('passport'),
    session = require('express-session'),
    errorHandler = require('errorhandler'),
    mongoStore = require('connect-mongo')(session),
    mongoose = require('mongoose'),
    fs = require('fs');


module.exports = function (app) {
    var env = app.get('env');
    //app.set('views', config.root + '/server/views');
    //app.engine('html', require('ejs').renderFile);
    //app.set('view engine', 'html');
    app.use(compression());
    app.use(bodyParser.urlencoded({extended: false}));
    app.use(bodyParser.json());
    app.use(methodOverride());
    app.use(cookieParser());
    //app.use(passport.initialize());

    // Persist sessions with mongoStore
    // We need to enable sessions for passport twitter because its an oauth 1.0 strategy
    /*app.use(session({
        secret: config.secrets.session,
        resave: true,
        saveUninitialized: true,
        store: new mongoStore({mongoose_connection: mongoose.connection})
    }));*/

    //app.use(favicon(path.join(config.root, 'server/dist', 'assets/favicon.ico')));
    // mapping angular2 static files
    app.use(express.static(path.join(config.root, config.dist)));
    app.use(express.static(path.join(config.root, config.document.rootPath)));

    if(!fs.existsSync(path.join(config.root,config.document.rootPath))){
        fs.mkdir(path.join(config.root,config.document.rootPath));
    }
    if(!fs.existsSync(path.join(config.root,config.document.pdfPath))){
        fs.mkdir(path.join(config.root,config.document.pdfPath));
    }
    if(!fs.existsSync(path.join(config.root,config.document.imagePath))){
        fs.mkdir(path.join(config.root,config.document.imagePath));
    }
    if(!fs.existsSync(path.join(config.root,config.document.upload))){
        fs.mkdir(path.join(config.root,config.document.upload));
    }
    app.use(express.static(path.join(config.root, config.document.rootPath)));
    app.use(morgan('combined'));


};
