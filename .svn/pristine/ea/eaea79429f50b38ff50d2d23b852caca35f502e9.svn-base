import {Injectable} from "@angular/core";
import {HttpService} from "../services/http-service.service";
import {BehaviorSubject} from "rxjs";
import {ComparisonFund} from "./comparisonFund";

@Injectable()
export class CompareService {

    private fundCompareDataSource = new BehaviorSubject<ComparisonFund[]>([]);
    compareData = this.fundCompareDataSource.asObservable();

    constructor(private httpService: HttpService) {
    }

    addToCompare(fund: any): [boolean, string] {
        let fundList = this.fundCompareDataSource.getValue();
        if (fundList.length >= 3) {
            return [false, "Cannot compare more than 3 funds"];
        } else if (fundList.some(fundInList => fund.id == fundInList.id)) {
            return [false, "Fund already added to compare"];
        } else if (fundList.length > 0 && fundList[0].category != fund.category) {
            return [false, "Cannot compare funds from different categories"];
        } else {
            fundList.push(fund);
            this.fundCompareDataSource.next(fundList);
            return [true, "Fund added to comparison"];
        }

    }

    removeFromCompare(fundId: string) {
        let fundList = this.fundCompareDataSource.getValue();
        fundList = fundList.filter(fund => fund.id != fundId);
        console.log(fundList);
        this.fundCompareDataSource.next(fundList);
    }

    removeAllFromCompare() {
        this.fundCompareDataSource.next([]);
    }

    getFundComparisonData() {
        let fundIdList: string[] = [];
        this.fundCompareDataSource.getValue().forEach(fund => fundIdList.push(fund.id))
        return this.fundCompareDataSource.getValue();
        //   return this.httpService.post('/fund/getComparisonData', {"fundIdList": fundIdList});
    }

}
