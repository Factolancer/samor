import {Component, OnInit, OnDestroy} from "@angular/core";
import {Input} from "@angular/core/src/metadata/directives";
import {FilterData} from "./filter-data";
import {ExploreFundsService} from "../explore-funds.service";
import {Subscription} from "rxjs";
import {FundSearchInput} from "../fund-search-input";
import {ExploreFundConstants} from "../explore-funds.constants";

@Component({
    selector: 'app-rating-filter',
    templateUrl: './rating-filter.component.html',
    styleUrls: ['./filters.scss']
})
export class RatingFilterComponent implements OnInit, OnDestroy {

    ratingFilterData: FilterData[] = [];
    filterTitle: string;
    selectedArray: FilterData[] = [];
    searchInputSubscription: Subscription;
    searchResultSubscription: Subscription;
    searchInput: FundSearchInput;

    constructor(private exploreFundsService: ExploreFundsService) {
        this.searchInputSubscription = this.exploreFundsService.fundSearchInput
            .subscribe(searchInput => {
                this.searchInput = searchInput;
                if (searchInput.queryType == ExploreFundConstants.SEARCH_QUERY) {
                    this.selectedArray = [];
                    this.searchInput.rating = [];
                }
            });

        this.searchResultSubscription = this.exploreFundsService.fundSearchResult.subscribe(searchResults => {
            this.ratingFilterData = [];
            //removing those searchSuggestions which have been already checked
            if (searchResults.ratingFilterData) {
                this.ratingFilterData = searchResults.ratingFilterData.filter(item => {
                    let add = true;
                    this.selectedArray.forEach(selectedItem => {
                        if (selectedItem.id === item.id) {
                            add = false;
                        }
                    });
                    return add;
                });
            }
        })
    }

    filter(checked: any, item: FilterData) {
        if (checked) {
            this.selectedArray.push(item);
        } else {
            //deselecting the item.
            let newArray = [];
            this.selectedArray.forEach(elm => {
                if (elm.id != item.id) {
                    newArray.push(elm)
                }
            });
            this.selectedArray = newArray;
        }

        //preparing id array from selected elements
        this.searchInput.rating = [];
        this.selectedArray.forEach(elm => {
            this.searchInput.rating.push(+elm.id);
        });
//        this.searchInput.rating = this.selectedArray;
        this.exploreFundsService.filterFunds(this.searchInput);

    }

    clearFilter() {
        this.selectedArray = [];
        this.searchInput.rating = [];
        this.exploreFundsService.filterFunds(this.searchInput);
    }

    ngOnInit() {
        this.filterTitle = "Fund Rating";
    }

    ngOnDestroy() {
        this.searchInputSubscription.unsubscribe();
        this.searchResultSubscription.unsubscribe();
    }
}
