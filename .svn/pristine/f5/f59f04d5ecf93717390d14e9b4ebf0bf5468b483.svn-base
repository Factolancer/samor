import {Component, OnInit} from '@angular/core';
import {Http, Headers} from '@angular/http';
import {Router} from '@angular/router';
import {AuthHttp, JwtHelper} from 'angular2-jwt';

@Component({
    selector: 'home',
    templateUrl: './home.component.html',
    styleUrls: ['./home.component.css'],
    providers: [JwtHelper],

})
export class HomeComponent implements OnInit {

    jwt: string;
    decodedJwt: string;
    response: string;
    api: string;
    myserverresponse: string;

    constructor(public router: Router, public http: Http, public authHttp: AuthHttp,
                public jwthelper: JwtHelper) {
        this.jwt = //this.authConfig.tokenGetter();
            localStorage.getItem('id_token');
        this.decodedJwt = this.jwt && this.jwthelper.decodeToken(this.jwt);
        //window.jwt_decode(this.jwt);
        console.log(this.decodedJwt);
    }

    logout() {
        localStorage.removeItem('id_token');
        this.router.navigate(['/login']);
    }

    callMyServer() {
        //debugger;
        this.myserverresponse = null;
        this.http.get('http://localhost:5000/')
            .subscribe(
                response => this.myserverresponse = response.text(),
                error => this.myserverresponse = error.text()
            );
        console.log(this.myserverresponse);
    }

    callAnonymousApi() {
        this._callApi('Anonymous', 'http://localhost:3001/api/random-quote');
    }

    callSecuredApi() {
        this._callApi('Secured', 'http://localhost:3001/api/protected/random-quote');
    }

    _callApi(type, url) {
        this.response = null;
        if (type === 'Anonymous') {
            // For non-protected routes, just use Http
            this.http.get(url)
                .subscribe(
                    response => this.response = response.text(),
                    error => this.response = error.text()
                );
        }
        if (type === 'Secured') {
            // For protected routes, use AuthHttp
            debugger;
            this.authHttp.get(url)
                .subscribe(
                    response => this.response = response.text(),
                    error => {
                        this.response = error.text;
                        alert("Your session expired");
                        this.router.navigate(['/login']);
                    }
                );
        }
    }

    ngOnInit() {
    }

    ngOnDestroy() {

    }

}
