import { Observable } from 'rxjs/Rx';
import { MdDialogRef, MdDialog, MdDialogConfig } from '@angular/material';
import {Injectable, ViewContainerRef, Inject} from '@angular/core';
import {LoginComponent} from "./login.component";
import {ForgotPasswordComponent} from "./forgot-password.component"; // brath added 12th jan 8pm
import {LoginToInvestComponent} from "./logintoinvest.component";
import {Router} from "@angular/router";
import {APP_CONFIG, IAppConfig} from "../../environments/environment";

@Injectable()
export class LoginService {

    constructor(private dialog: MdDialog, public router: Router, @Inject(APP_CONFIG) private config: IAppConfig) { }

    public loginUser(viewContainerRef: ViewContainerRef): Observable<any> {

        this.router.navigate(['/login'])
        return new Observable<any>();

        /*let dialogRef: MdDialogRef<LoginComponent>;
        let config = new MdDialogConfig();
        config.viewContainerRef = viewContainerRef;
        config.role = 'dialog';
        config.width = '50%';
        config.height = '60%';
        dialogRef = this.dialog.open(LoginComponent, config);
        return dialogRef.afterClosed();*/
    }

    /*public signUpUser(viewContainerRef: ViewContainerRef): Observable<any> {
        let dialogRef: MdDialogRef<SignupComponent>;
        let config = new MdDialogConfig();
        config.viewContainerRef = viewContainerRef;
        config.role = 'dialog';
        config.width = '50%';
        dialogRef = this.dialog.open(SignupComponent, config);
        return dialogRef.afterClosed();
    }*/

    public logOutUser(){
        localStorage.removeItem(this.config.localStoragePrefix+'id_token');
        localStorage.removeItem(this.config.localStoragePrefix+'cartId')
        this.router.navigate(['/']);
    }
}
