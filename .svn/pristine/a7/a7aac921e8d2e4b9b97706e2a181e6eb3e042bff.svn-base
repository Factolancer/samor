import {Injectable, ApplicationRef, Inject} from "@angular/core";
import {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from "@angular/router";
import {LoginService} from "./login/login.service";
import {Logger} from "./shared/logger/logger";
import {IAppConfig, APP_CONFIG} from "../environments/environment";
import {JwtHelper} from "angular2-jwt";
import {Observable} from "rxjs";


@Injectable()
export class AuthGuard implements CanActivate {

    // logInDialogRef: MdDialogRef<LoginComponent>;
    //viewContainerRef: ViewContainerRef;
    // loginService: LoginService;

    public result: any;
    public returnurlParam: string;
    className : string;
    constructor(private appRef: ApplicationRef, private loginService: LoginService, private router: Router, public logger: Logger, @Inject(APP_CONFIG) private config: IAppConfig, private jwtHelper: JwtHelper) {
        this.returnurlParam = this.config.returnUrlParam;
        //this.viewContainerRef = appRef.components[0].instance.viewContainerRef;
        //this.logInDialogRef = appRef.components[0].instance.loginDialogRef
        this.className = "AuthGuard";
    }

    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {

        /// checking user is loggedin
        return this.loginService.getUser().map((user) => {
            this.logger.debug(this.className,"AuthGuard");
            this.logger.debug(this.className,user);
            if (user.username.includes("Anonymous")) {
                let retUrlObj = {};
                retUrlObj[this.returnurlParam] = state.url;
                this.router.navigate([this.config.dloginUrl], {
                    queryParams: retUrlObj
                });
                this.logger.debug(this.className,"url to be sent afterLogin >>> " + state.url);
                return false;
            } else {
                if (user && user.username && !user.username.includes("Anonymous")) {
                    return true;
                }
            }
        });


        /*this.loginService
         .loginUser(this.viewContainerRef)
         .subscribe(res => {this.result = res; this.router.navigate([state.url])},
         error => {console.log(error)});*/


        /*if (this.userLoggedIn()) {
         this.router.navigate([state.url]);
         return true;
         }*/
        //this.router.navigate([state.url])
        //return false;
    }


}
